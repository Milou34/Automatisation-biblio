name: Build and Create Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install PyInstaller
      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          
      # Build the executable
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile main.py
          
      # Upload the executable as an artifact
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: my-executable
          path: dist/main.exe

  release:
    runs-on: ubuntu-latest
    needs: build  # Ensure the release job only runs after the build job completes

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download the artifact (executable) from the previous job
      - name: Download executable artifact
        uses: actions/download-artifact@v4
        with:
          name: my-executable

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v-${{ github.ref }}"
          release_name: "Release ${{ github.run_number }}-${{ github.ref }}"
          draft: false
          prerelease: false

      # Upload executable to the release
      - name: Upload executable to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./my-executable.zip
          asset_name: my-executable.zip
          asset_content_type: application/octet-stream
